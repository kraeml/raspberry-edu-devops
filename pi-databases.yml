---
- hosts: localhost
  connection: local

  vars:
    # Not working on pi. No solution yet disable php-version also
    # php_version: '7.1'
    db_user:
      name: "example_user"
      password: "passw0rd"
    mysql_user_name: root
    mysql_user_password: root
    mysql_packages:
      - mariadb-client
      - mariadb-server
      - python-mysqldb
    mysql_databases:
    - name: example_db
      encoding: latin1
      collation: latin1_general_ci
    mysql_users:
    - name: "{{db_user.name}}"
      host: "%"
      password: "{{db_user.password}}"
      priv: "example_db.*:ALL"
    - name: admin
      host: "%"
      password: "{{db_user.password}}"
      priv: "*.*:ALL"
    phpmyadmin_version: "4.8.3"
    php_webserver_daemon: "nginx"
    php_enable_php_fpm: true
    php_fpm_listen: "127.0.0.1:9000"
    nginx_remove_default_vhost: true
    nginx_vhosts:
      - listen: "80 default_server"
        server_name: "_"
        root: "/var/www/html"
        index: "index.html index.htm index.php index.nginx-debian.html"
        error_log: ""
        state: "present"
        template: "{{ nginx_vhost_template }}"
        filename: "default.conf"
        extra_parameters: |
          location / {
              try_files $uri $uri/ /index.html /index.php;
          }
          location ~ ^/~(?<userdir_user>[\w-]+)(?<userdir_uri>/.*)?$ {
              alias /home/$userdir_user/www$userdir_uri;
          	# autoindex on;
              location ~ [^/]\.php(/|$) {
                  include fastcgi_params;
                  fastcgi_index index.php;
                  # check if requested PHP file really exists
                  if (!-f $request_filename) {
                      return 404;
                  }
                  #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                  fastcgi_split_path_info ^(.+\.php)(/.+)$;
                  fastcgi_param SCRIPT_FILENAME $request_filename;
                  fastcgi_pass 127.0.0.1:9000;
              }
          }
          location ~ [^/]\.php$ {
              include fastcgi_params;
              fastcgi_index index.php;
              # check if requested PHP file really exists
              if (!-f $request_filename) {
                  return 404;
              }
              #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_param SCRIPT_FILENAME $request_filename;
              fastcgi_pass 127.0.0.1:9000;
          }
          # deny access to .htaccess files, if Apache's document root
          # concurs with nginx's one
          location ~ /\.ht {
              deny all;
          }
          location /_OPT {
              try_files $uri @uwsgi;
          }
          location @uwsgi {
              rewrite  ^/_OPT/(.*) /$1 break;
              include uwsgi_params;
              #uwsgi_pass /run/uwsgi/app/OnlinePythonTutor/socket;
              uwsgi_pass localhost:8003;
          }
          ## Begin - Security
          # deny all direct access for these folders
          location ~* /(.git|cache|bin|logs|backups|tests)/.*$ { return 403; }
          # deny running scripts inside core system folders
          location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
          # deny running scripts inside user folder
          location ~* /user/.*\.(txt|md|yaml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
          # deny access to specific files in the root folder
          location ~ /(LICENSE.txt|composer.lock|composer.json|nginx.conf|web.config|htaccess.txt|\.htaccess) { return 403; }

  roles:
    - role: geerlingguy.mysql
      become: yes
      tags:
        - db_mysql

    - role: geerlingguy.nginx
      become: yes
      tags:
        - db_mysql

    #- role: geerlingguy.php-versions
    #  become: yes
    #  tags:
    #    - php

    - role: geerlingguy.php
      become: yes
      tags:
        - php
        - db_mysql

    - role: geerlingguy.php-mysql
      become: yes
      tags:
        - db_mysql

  pre_tasks:
  - name: Debug info
    debug:
        msg: "USER_ID is {{ansible_user_id}} and Home is {{ansible_user_dir}}"
        verbosity: 1

  tasks:
  - name: Ensure sqlite3 and mongodb is installed
    become: yes
    apt:
        name:
          - sqlite3
          - mongodb-server
        update_cache: yes
        cache_valid_time: 3600

  - name: Ensure {{ansible_user_id}} is in group www-data
    become: yes
    user:
        name: "{{item}}"
        groups: www-data
        append: yes
    with_items:
        - "{{ansible_user_id}}"
    tags:
        - php
        - nginx

  - name: Ensure www-data is in group gpio
    become: yes
    user:
        name: "{{item}}"
        groups: gpio
        append: yes
    with_items:
        - www-data
    tags:
        - php
        - nginx

  - name: Ensure www directory for {{ansible_user_id}} exists
    file:
        path: "{{ansible_user_dir}}/www"
        state: directory
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
    tags:
        - php
        - nginx

  - name: Ensure some html for {{ansible_user_id}} exists
    template:
        src: "{{item}}.j2"
        dest: "{{ansible_user_dir}}/www/{{item}}"
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
    with_items:
        - index.html
        - index.php
    tags:
        - php
        - nginx

  - name: Ensure some html for {{ansible_user_id}} exists
    become: yes
    template:
        src: "{{item}}.j2"
        dest: "/var/www/html/{{item}}"
        owner: www-data
        group: www-data
    with_items:
        - index.php
    tags:
        - php
        - nginx

  - name: Ensure /var/www/html/phpMyAdmin is directory
    become: yes
    file:
        path: /var/www/html/phpMyAdmin
        state: directory
        owner: www-data
        group: www-data
    tags:
        - phpmyadmin

  - name: Ensure phpmyadmin ist installed
    become: yes
    unarchive:
        dest: /var/www/html/phpMyAdmin
        src: https://files.phpmyadmin.net/phpMyAdmin/{{phpmyadmin_version}}/phpMyAdmin-{{phpmyadmin_version}}-all-languages.tar.gz
        extra_opts: --strip-components=1
        creates: /var/www/html/phpMyAdmin/LICENSE
        group: www-data
        owner: www-data
        remote_src: yes
    tags:
        - phpmyadmin

  - name: Ensure phpmyadmin config is installed
    become: yes
    template:
        src: config.inc.php.j2
        dest: /var/www/html/phpMyAdmin/config.inc.php
        owner: www-data
        group: www-data
    tags:
        - phpmyadmin

  - name: Ensure /var/www owned by www-data
    become: yes
    file:
        path: /var/www
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
    tags:
        - php
        - nginx
