---
- name: Install node-red
  hosts: pis
  connection: local

  tasks:
  - name: Debug info
    debug:
      msg: "USER_ID is {{ansible_user_id}} and Home is {{ansible_user_dir}}"
      verbosity: 1

  - name: Node-red block
    block:
    - name: Ensure raspberry dependencies are installed
      become: yes
      apt:
        name:
          - sense-hat
          - raspi-gpio
          - python3-rpi.gpio
          - python-rpi.gpio
          - python3-blinkt
          - python-blinkt
          - build-essential
          - pigpiod
        update_cache: yes
        cache_valid_time: 3600
      tags:
        - install

    - name: Ensure we have our own pigpiod in /etc/rc.local
      become: yes
      lineinfile:
        path: /etc/rc.local
        regexp: '^pigpiod -p 9999'
        insertbefore: '^exit\s.0'
        line: 'pigpiod -p 9999'
      register: pigpiodinstall

    - name: Ensure pigpiod is running
      become: yes
      command: pigpiod -p 9999
      when: pigpiodinstall is changed

    - name: Ensure group gpio exists
      become: yes
      group:
        name: gpio

    - name: Get nodered script
      get_url:
        dest: /tmp/update-nodejs-and-nodered
        url: https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered
        mode: 0777
      tags:
        - install

    - name: Execute nodered script via /tmp
      shell: >
        USER={{ansible_user_id}}
        HOME={{ansible_user_dir}}
        yes | /tmp/update-nodejs-and-nodered
      notify: restart_nodered
      register: nodered
      tags:
        - install

    - name: Ensure noder-red is enabled as service
      become: yes
      service:
        name: nodered
        enabled: yes

    - name: Ensure nodred and some dependencies are installed
      become: yes
      npm:
        name: "{{item}}"
        global: yes
      with_items:
        - npm-check
        - node-red-admin
      tags:
        - install

    - name: Flush handlers
      meta: flush_handlers

    - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 1880
        delay: 10
      ignore_errors: yes

    - name: Ensure pimoroni directory created
      file:
        path: "{{ansible_user_dir}}/.node-red/nodes"
        state: directory

    - name: Ensure pimoroni plugins are installed
      git:
        dest: "{{ansible_user_dir}}/.node-red/nodes/pimoroni-nodes"
        repo: http://github.com/pimoroni/node-red-nodes
        clone: yes # If C(no), do not clone the repository if it does not exist locally
        update: yes # If C(no), do not retrieve new revisions from the origin repository
      notify: restart_nodered
      register: pimoroni

    - name: Install node-red addons
      npm:
          name: "{{item}}"
          state: present
          path: "{{ansible_user_dir}}/.node-red"
      with_items:
        - node-red-dashboard
        - node-red-contrib-bigtimer
        - node-red-node-mongodb
        - node-red-node-mysql
        - node-red-contrib-looptimer
        - node-red-node-pi-sense-hat
        - node-red-contrib-opcua
        - node-red-contrib-iiot-opcua
        - node-red-contrib-solar-power-forecast
        - node-red-node-openweathermap
        - node-red-node-arduino
        - node-red-node-pi-gpiod
      notify:
        - rebuild_node_red
        - restart_nodered

    - name: Flush handlers
      meta: flush_handlers

    - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 1880
        delay: 10

    - name: Ensure some pimoroni plugins are disabled
      command: "{{item}}"
      with_items:
        - node-red-admin login
        - node-red-admin disable node-red/node-flotilla
        - node-red-admin disable node-red-node-ledborg/ledborg
        - node-red-admin disable node-red/rpi-explorerhat
        - node-red-admin disable node-red/rpi-unicorn
        # when: pimoroni.changed or nodered.changed
      notify: restart_nodered

    - name: Ensure gpiomem rights for group gpio
      become: yes
      file:
        path: /dev/gpiomem
        owner: root
        group: gpio
        mode: 0660
      notify: restart_nodered
    tags:
      - node-red

  handlers:
  - name: restart_nodered
    become: yes
    service:
      enabled: yes
      state: restarted
      name: nodered.service

  - name: rebuild_node_red
    command: npm rebuild
    args:
      chdir: "{{ansible_user_dir}}/.node-red"
