---
- hosts: localhost
  connection: local

  tasks:
  - name: Debug info
    debug:
        msg: "USER_ID is {{ansible_user_id}} and Home is {{ansible_user_dir}}"

  - name: Node-red block
    block:
    - name: Ensure raspberry dependencies are installed
      become: yes
      apt:
          name:
            - expect
            - sense-hat
            - raspi-gpio
            - python-rpi.gpio
            - python-pexpect
          update_cache: yes
          cache_valid_time: 3600

    - name: test update-nodejs-and-nodered exists
      stat:
        path: /usr/bin/update-nodejs-and-nodered
      register: update_nodejs_and_nodered
      changed_when: false
      ignore_errors: yes

    - name: Get nodered script
      get_url:
        dest: /tmp/update-nodejs-and-nodered
        url: https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/update-nodejs-and-nodered
        mode: 0777
      when: update_nodejs_and_nodered.stat.exists != True

    #- name: Change to nodejs minor version
    #  lineinfile:
    #      dest: /tmp/update-nodejs-and-nodered
          # The path of the file to modify.,Note that the Windows path delimiter '' must be escaped as '' (see examples below)
    #      regexp: "8."
          # The regular expression to look for in every line of the file.
          # For C(state=present), the pattern to replace if found; only the last
          # line found will be replaced. For C(state=absent), the pattern of the
          # line to remove.  Uses .NET compatible regular expressions;
          # see U(https://msdn.microsoft.com/en-us/library/hs600312%28v=vs.110%29.aspx).
    #      line: "{{nodejs_minor_version}}."
          # Required for C(state=present). The line to insert/replace into the
          # file. If C(backrefs) is set, may contain backreferences that will
          # get expanded with the C(regexp) capture groups if the regexp matches.
    #  when: update_nodejs_and_nodered.stat.exists != True

    - name: Execute nodered script
      shell: |
        User={{ansible_user_id}}
        HOME={{ansible_user_dir}}
        yes | /tmp/update_nodejs_and_nodered
      args:
          creates: /usr/bin/update-nodejs-and-nodered
      notify: restart_nodred
      register: nodered
      ignore_errors: yes
      when: update_nodejs_and_nodered.stat.exists != True

    #- name: Change nodered update skript for minor nodejs
    #  become: yes
    #  replace:
    #      dest: /usr/bin/update-nodejs-and-nodered
    #      regexp: "bash <"
    #      replace: "bash < sed s/8./{{nodejs_minor_version}}./g <"
    #  ignore_errors: yes
    #  changed_when: false

    - name: Ensure nodred and some dependencies are installed
      become: yes
      npm:
        name: "{{item}}"
        global: yes
      with_items:
        - npm-check
        - node-red-admin

    - name: Flush handlers
      meta: flush_handlers

    - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
      wait_for:
          port: 1880
          delay: 10
      register: nodered_service
      ignore_errors: yes

    - name: Ensure pimoroni directory created
      file:
          path: "{{ansible_user_dir}}/.node-red/nodes"
          state: directory

    - name: Ensure pimoroni plugins are installed
      git:
          dest: "{{ansible_user_dir}}/.node-red/nodes/pimoroni-nodes"
          repo: http://github.com/pimoroni/node-red-nodes
          clone: yes # If C(no), do not clone the repository if it does not exist locally
          update: yes # If C(no), do not retrieve new revisions from the origin repository
      notify: restart_nodred
      register: pimoroni

    - name: Install node-red addons
      npm:
          name: "{{item}}"
          state: present
          path: "{{ansible_user_dir}}/.node-red"
      with_items:
          - node-red-dashboard
          - node-red-contrib-bigtimer
          - node-red-node-mongodb
          - node-red-node-mysql
          - node-red-contrib-looptimer
          - node-red-node-pi-sense-hat
          - node-red-contrib-opcua
          - node-red-contrib-iiot-opcua
          - node-red-contrib-solar-power-forecast
          - node-red-node-openweathermap
      notify:
          - rebuild_node_red
          - restart_nodred

    - name: Flush handlers
      meta: flush_handlers

    - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
      wait_for:
          port: 1880
          delay: 10
      register: nodered_service
      ignore_errors: yes

    - name: Ensure some pimoroni plugins are disabled
      command: "{{item}}"
      with_items:
          - node-red-admin login
          - node-red-admin disable node-red/node-flotilla
          - node-red-admin disable node-red-node-ledborg/ledborg
          - node-red-admin disable node-red/rpi-explorerhat
          - node-red-admin disable node-red/rpi-unicorn
          # when: pimoroni.changed or nodered.changed
      ignore_errors: yes

    rescue:
    - name: Get nodered script
      become: yes
      get_url:
        dest: /usr/bin/update-nodejs-and-nodered
        url: https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/update-nodejs-and-nodered
        mode: 0777
      ignore_errors: yes
    tags:
      - node-red

  - name: NPM unsafe-perm
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: npm config --global set unsafe-perm=true
    tags:
        - node-red
        - web-dev

  handlers:
  - name: restart_nodred
    become: yes
    service:
      enabled: yes
      state: restarted
      name: nodered.service

  - name: rebuild_node_red
    command: npm rebuild
    args:
        chdir: "{{ansible_user_dir}}/.node-red"
