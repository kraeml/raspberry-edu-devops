---
- hosts: all

  vars:
  - db_user:
      name: "example_user"
      password: "passw0rd"
  - phpmyadmin_version: "4.7.5"

  roles:
  - role: jupyter
    become: yes
    nodejs_version: "8.x"
    tags: jupyter
    nodejs_npm_global_packages:
        - ijavascript

  - role: geerlingguy.docker
    become: yes
    docker_apt_release_channel: stable
    docker_apt_repository: "deb [arch=armhf] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    docker_install_compose: false
    docker_compose_version: "1.16.1"
    docker_compose_path: /usr/local/bin/docker-compose
    tags:
        - docker

  - role: geerlingguy.mysql
    become: yes
    mysql_root_home: /root
    mysql_user_name: root
    mysql_user_password: root
    mysql_root_password_update: yes
    mysql_databases:
    - name: example_db
      encoding: latin1
      collation: latin1_general_ci
    mysql_users:
    - name: "{{db_user.name}}"
      host: "%"
      password: "{{db_user.password}}"
      priv: "example_db.*:ALL"
    - name: admin
      host: "127.0.0.1"
      password: "admin"
      priv: "*.*:ALL"
    tags:
      - db_mysql

  pre_tasks:
  - name: Debug info
    debug:
        msg: "USER_ID is {{ansible_user_id}} and Home is {{ansible_user_dir}}"
        #verbosity: # A number that controls when the debug is run, if you set to 3 it will only run debug when -vvv or above

  tasks:
  - name: Ensure user {{ansible_user_id}} is member of group docker
    become: yes
    user:
        name: "{{ansible_user_id}}"
        generate_ssh_key: yes
        ssh_key_type: rsa
        groups: "{{item}}"
        append: yes
    with_items:
        - docker
        - input
    tags:
        - docker
        - sense-hat
        - user

  - name: Ensure raspberry dependencies are installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600
    with_items:
        - nmap
        - curl
        - sudo
        - expect
        - sense-hat
        - raspi-gpio
        - python-rpi.gpio
        - debian-keyring
        - debian-archive-keyring
        - wiringpi
        - dphys-swapfile
        - lsb-core
        - avahi-utils
        - avahi-daemon
        - openjdk-9-jdk
        - oracle-java8-jdk
        - tidy
        - python-pexpect
    tags:
        - base

  - name: Alternatives set
    become: yes
    alternatives:
        path: /usr/lib/jvm/java-9-openjdk-armhf/bin/java
        name: java
    tags:
        - base

  - name: Ensure ansible.cfg is present in /etc/ansible
    become: yes
    get_url:
        dest: /etc/ansible/ansible.cfg
        url: https://raw.githubusercontent.com/ansible/ansible/devel/examples/ansible.cfg
        owner: root
        group: root
        mode: 0644
    tags:
        - ansible

  - name: html5validator via pip
    become: yes
    pip:
        name: html5validator
        executable: pip3
        state: present
    tags:
        - web-dev

  - name: Ensure tex dependencies are installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600
        install_recommends: yes
    with_items:
        - texlive
        - texlive-latex-extra
        - dvipng
        - texlive-xetex
        - texlive-latex-recommended
        - texlive-fonts-recommended
    tags:
        - tex

  - name: NPM unsafe-perm
    become: yes
    command: npm config --global set unsafe-perm=true
    tags:
        - node-red

  - name: Node-red block
    block:
      - name: test update-nodejs-and-nodered exists
        stat:
            path: /usr/bin/update-nodejs-and-nodered
        register: update_nodejs_and_nodered
        changed_when: false
        ignore_errors: yes

      - name: Get nodered script
        get_url:
            dest: /tmp/update-nodejs-and-nodered
            url: https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/update-nodejs-and-nodered
            mode: 0777
        when: update_nodejs_and_nodered.stat.exists != True

      - name: Execute nodered script
        shell: yes | ./nodered.sh
        args:
            creates: /usr/bin/update-nodejs-and-nodered
        notify: restart_nodred
        register: nodered
        ignore_errors: yes

      - name: Ensure nodred and some dependencies are installed
        become: yes
        npm:
            name: "{{item}}"
            global: yes
        with_items:
            - npm-check
            - node-red-admin

      - name: Flush handlers
        meta: flush_handlers

      - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
        wait_for:
            port: 1880
            delay: 10
        register: nodered_service
        ignore_errors: yes

      - name: Ensure pimoroni directory created
        file:
            path: "{{ansible_user_dir}}/.node-red/nodes"
            state: directory

      - name: Ensure pimoroni plugins are installed
        git:
            dest: "{{ansible_user_dir}}/.node-red/nodes/pimoroni-nodes"
            repo: http://github.com/pimoroni/node-red-nodes
            clone: yes # If C(no), do not clone the repository if it does not exist locally
            update: yes # If C(no), do not retrieve new revisions from the origin repository
        notify: restart_nodred
        register: pimoroni

      - name: Install node-red addons
        npm:
            name: "{{item}}"
            state: present
            path: "{{ansible_user_dir}}/.node-red"
        with_items:
            - node-red-dashboard
            - node-red-contrib-bigtimer
            - node-red-node-mongodb
            - node-red-node-mysql
            - node-red-contrib-looptimer
            - node-red-node-pi-sense-hat
            - node-red-contrib-opcua
            - node-red-contrib-iiot-opcua
            - node-red-contrib-solar-power-forecast
            - node-red-node-openweathermap
        notify:
            - rebuild_node_red
            - restart_nodred

      - name: Flush handlers
        meta: flush_handlers

      - name: Wait 300 seconds for port 1880 to become open on the host, don't start checking for 10 seconds
        wait_for:
            port: 1880
            delay: 10
        register: nodered_service
        ignore_errors: yes

      - name: Ensure some pimoroni plugins are disabled
        command: "{{item}}"
        with_items:
            - node-red-admin login
            - node-red-admin disable node-red/node-flotilla
            - node-red-admin disable node-red-node-ledborg/ledborg
            - node-red-admin disable node-red/rpi-explorerhat
            - node-red-admin disable node-red/rpi-unicorn
        # when: pimoroni.changed or nodered.changed
        ignore_errors: yes
    rescue:
        - name: Get nodered script
          become: yes
          get_url:
              dest: /usr/bin/update-nodejs-and-nodered
              url: https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/update-nodejs-and-nodered
              mode: 0777
    ignore_errors: yes
    tags:
        - node-red

  - name: Ensure sqlite3 is installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600

    with_items:
        - sqlite3
    tags:
        - web-dev

  - name: Additional packages for web-dev learning
    become: yes
    npm:
        name: "{{item}}"
        state: present
        global: yes
    with_items:
        - pm2
        - socket.io
        - sqlite3
        - mongoose
        - mysql
        - express
        - javascripting
        - how-to-npm
        - scope-chains-closures
        - stream-adventure
        - how-to-markdown
        - learnyouhtml
        - learnyounode
        - functional-javascript-workshop
        - bytewiser
        - expressworks
        - bug-clinic
        - async-you
        - test-anything
        - learnyoumongo
        - torrential
        - html-validator-cli
    tags:
        - web-dev

  - name: Ensure cloud9 dependencies are installed
    become: yes
    apt:
        name: tmux
        update_cache: yes
        cache_valid_time: 3600

    tags:
        - cloud9

  - name: Clone cloud9
    git:
        dest: "{{ansible_user_dir}}/cloud9"
        repo: https://github.com/c9/core.git
        clone: yes
        update: yes
    register: clone_cloud9
    tags:
        - cloud9

  - name: Install cloud9
    become: yes
    shell: bash -c 'HOME={{ansible_user_dir}} ./scripts/install-sdk.sh'
    args:
        chdir: "{{ansible_user_dir}}/cloud9/"
    when: clone_cloud9.changed
    notify:
        - restart_cloud9
    tags:
        - cloud9

  - name: Ensure {{ansible_user_dir}}/cloud9 owned by {{ansible_user_id}}
    become: yes
    file:
        path: "{{ansible_user_dir}}/{{item}}"
        state: directory
        recurse: yes
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
    with_items:
        - cloud9
        - .c9
    tags:
        - cloud9

  - name: Install cloud9 systemd scripts
    become: yes
    template:
        src: cloud9.service.j2
        dest: /lib/systemd/system/cloud9.service
        mode: 0644
    notify:
        - restart_cloud9
    tags:
        - cloud9

  - name: Ensure PHP ist installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600

    with_items:
        - nginx-full
        - php7.0
        - php7.0-curl
        - php7.0-gd
        - php7.0-fpm
        - php7.0-cli
        - php7.0-opcache
        - php7.0-mbstring
        - php7.0-xml
        - php7.0-zip
        - php7.0-mysql
    tags:
        - php
        - nginx

  - name: Default nginx config
    become: yes
    template:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: "{{item.owner | default('root')}}"
        group: "{{item.group | default('root')}}"
    with_items:
        - src: default.j2
          dest: /etc/nginx/sites-available/default
        - src: php7_common.j2
          dest: /etc/nginx/php7_common
        - src: index.php.j2
          dest: /var/www/html/index.php
          owner: www-data
          group: www-data
    notify:
        - restart_nginx
        - restart_php-fpm
    tags:
        - php
        - nginx

  - name: Ensure /var/www owned by www-data
    become: yes
    file:
        path: /var/www
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
    tags:
        - php
        - nginx

  - name: Ensure some users in group www-data
    become: yes
    user:
        name: "{{item}}"
        groups: www-data
        append: yes
    with_items:
        - "{{ansible_user_id}}"
    tags:
        - php
        - nginx

  - name: Ensure some users in group gpio
    become: yes
    user:
        name: "{{item}}"
        groups: gpio
        append: yes
    with_items:
        - www-data
    tags:
        - php
        - nginx

  - name: Ensure www directory for {{ansible_user_id}} exists
    file:
        path: "{{ansible_user_dir}}/www"
        state: directory
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
    tags:
        - php
        - nginx

  - name: Ensure some html for {{ansible_user_id}} exists
    template:
        src: "{{item}}.j2"
        dest: "{{ansible_user_dir}}/www/{{item}}"
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
    with_items:
        - index.html
        - index.php
    tags:
        - php
        - nginx

  - name: Ensure /var/www/html/phpMyAdmin is directory
    become: yes
    file:
        path: /var/www/html/phpMyAdmin
        state: directory
        owner: www-data
        group: www-data
    tags:
        - phpmyadmin

  - name: Ensure phpmyadmin ist installed
    become: yes
    unarchive:
        dest: /var/www/html/phpMyAdmin
        src: https://files.phpmyadmin.net/phpMyAdmin/{{phpmyadmin_version}}/phpMyAdmin-{{phpmyadmin_version}}-all-languages.tar.gz
        extra_opts: --strip-components=1
        creates: /var/www/html/phpMyAdmin/LICENSE
        group: www-data
        owner: www-data
        remote_src: yes
    tags:
        - phpmyadmin

  - name: Ensure phpmyadmin config is installed
    become: yes
    template:
        src: config.inc.php.j2
        dest: /var/www/html/phpMyAdmin/config.inc.php
        owner: www-data
        group: www-data
    tags:
        - phpmyadmin

  - name: Ensure mongodb is installed
    become: yes
    apt:
        name: mongodb-server
        update_cache: yes
        cache_valid_time: 3600

    tags:
        - mongodb

  - name: Ensure mqtt is installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600

    with_items:
        - mosquitto
        - mosquitto-clients
    tags:
        - mqtt

  - name: Ensure etherpad and etherdraw is installed
    become: yes
    apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 3600

    with_items:
        - libreoffice
        - abiword
        - libcairo2-dev
        - libjpeg-dev
        - libpango1.0-dev
        - libgif-dev
        - build-essential
        - g++
    tags:
        - etherpad

  - name:
    become: yes
    git:
        dest: "/opt/{{item.dest}}"
        repo: "{{item.repo}}"
        clone: yes
        update: yes
    register: git_etherpad
    with_items:
        - dest: etherpad
          repo: git://github.com/ether/etherpad-lite.git
        - dest: etherdraw
          repo: git://github.com/JohnMcLear/draw.git
    tags:
        - etherpad

  - name: Ensure etherpad user exists
    become: yes
    user:
        name: "{{item}}"
        home: "/opt/{{item}}"
        move_home: no
        createhome: yes
        system: yes
        state: present
    with_items:
        - etherpad
        - etherdraw
    tags:
        - etherpad

  - name: Ensure etherpad home owned by etherpad
    become: yes
    file:
        path: "/opt/{{item}}"
        owner: "{{item}}"
        group: "{{item}}"
        recurse: yes
        state: directory
    with_items:
        - etherpad
        - etherdraw
    tags:
        - etherpad

  - name: Settings for etherpad
    become: yes
    template:
        src: settings.json.j2
        dest: /opt/etherpad/settings.json
        owner: etherpad
        group: etherpad
    tags:
        - etherpad

  - name: Install etherpad
    become: yes
    become_user: etherpad
    shell: "{{item}}"
    args:
        chdir: /opt/etherpad
    when: git_etherpad.changed
    with_items:
        - /opt/etherpad/bin/installDeps.sh
        - /usr/bin/npm install ep_activepads ep_adminpads ep_copy_paste_images ep_cursortrace
        - /usr/bin/npm install ep_font_family ep_font_size ep_horizontal_line ep_latexexport
        - /usr/bin/npm install ep_markdown ep_markdownify ep_padlist ep_print ep_printer
        - /usr/bin/npm install ep_search ep_spellcheck ep_tables ep_xmlexport
    tags:
        - etherpad

  - name: Settings for etherpad
    become: yes
    template:
        src: etherpad-lite.service.j2
        dest: /etc/systemd/system/etherpad-lite.service
    notify:
        - restart_etherpad
    tags:
        - etherpad

  - name: Install etherdraw
    become: yes
    become_user: etherdraw
    shell: "{{item}}"
    args:
        chdir: /opt/etherdraw
    when: git_etherpad.changed
    with_items:
        - /opt/etherdraw/bin/installDeps.sh
    tags:
        - etherpad
    notify:
        - restart_etherdraw

  - name: Ensure etherdraw log exists
    become: yes
    file:
        path: /var/log/etherdraw
        state: directory
        mode: 0777
    tags:
        - etherpad

  - name: service etherdraw
    become: yes
    template:
        src: etherdraw.j2
        dest: /etc/init.d/etherdraw
        mode: 0774
    notify:
        - restart_etherdraw
    tags:
        - etherpad

  handlers:
  - name: restart_nodred
    become: yes
    service:
      enabled: yes
      state: restarted
      name: nodered.service

  - name: rebuild_node_red
    command: npm rebuild
    args:
        chdir: "{{ansible_user_dir}}/.node-red"

  - name: restart_cloud9
    become: yes
    service:
      enabled: yes
      state: restarted
      name: cloud9.service

  - name: restart_nginx
    become: yes
    service:
      enabled: yes
      state: restarted
      name: nginx

  - name: restart_php-fpm
    become: yes
    service:
      enabled: yes
      state: restarted
      name: php7.0-fpm

  - name: restart_etherpad
    become: yes
    service:
      enabled: yes
      state: restarted
      name: etherpad-lite

  - name: restart_etherdraw
    become: yes
    service:
      enabled: yes
      state: restarted
      name: etherdraw
